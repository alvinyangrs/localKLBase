apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -v -f docker-compose-linux.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -v -f docker-compose-linux.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: minio
        app: minio
    spec:
      containers:
        - args:
            - minio
            - server
            - /minio_data
            - --console-address
            - :9001
          env:
            - name: MINIO_ACCESS_KEY
              value: minioadmin
            - name: MINIO_SECRET_KEY
              value: minioadmin
          image: registry.cn-hangzhou.aliyuncs.com/ryang-test/minio:RELEASE.2023-03-20T20-16-18Z #minio/minio:RELEASE.2023-03-20T20-16-18Z
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:9000/minio/health/live
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 20
          name: milvus-minio-local
          volumeMounts:
            - mountPath: /minio_data
              name: minio-claim0
      restartPolicy: Always
      imagePullSecrets:
      - name: regcred 
      volumes:
        - name: minio-claim0
          persistentVolumeClaim:
            claimName: minio-claim0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: minio-claim0
  name: minio-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi



---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  ports:
  - port: 9000  # 服务端口
    targetPort: 9000  # 容器端口
  selector:
    app: minio  
